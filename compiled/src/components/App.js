import MovieList from './MovieList.js';
import Search from './Search.js';
import Add from './Add.js';

class App extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      movieList: [],
      fullList: [],
      searchInput: '',
      addInput: ''
    };
  }

  handleInput(e) {
    if (e.target.id === 'add') {
      this.setState({
        addInput: e.target.value
      });
    } else if (e.target.id === 'search') {
      this.setState({
        searchInput: e.target.value
      });
    }
  }

  keyPress(e) {
    if (e.keyCode === 13) {
      if (e.target.id === 'add') {
        this.handleAdd(this.state.addInput);
      } else if (e.target.id === 'search') {
        this.handleSearch(this.state.searchInput);
      }
    };
  }

  handleSearch() {
    if (this.state.searchInput === '') {
      this.setState({
        movieList: this.state.fullList
      });
      return;
    }

    var matches = [];
    for (var i = 0; i < this.state.fullList.length; i++) {
      if (this.state.fullList[i].toLowerCase().includes(this.state.searchInput.toLowerCase())) {
        matches.push(this.state.fullList[i]);
      }
    }

    if (matches.length > 0) {
      this.setState({
        movieList: matches,
        searchInput: ''
      });
    } else {
      this.setState({
        movieList: ['movie not available'],
        searchInput: ''
      });
    }
  }

  handleAdd() {
    if (this.state.addInput === '') {
      return;
    }
    this.setState({
      fullList: [...this.state.fullList, this.state.addInput],
      movieList: [...this.state.fullList, this.state.addInput],
      addInput: ''
    });
  }

  render() {
    return React.createElement(
      'div',
      null,
      React.createElement(Add, { value: this.state.addInput, handleInput: this.handleInput.bind(this), handleAdd: this.handleAdd.bind(this), onKeyDown: this.keyPress.bind(this) }),
      React.createElement(Search, {
        value: this.state.searchInput, handleInput: this.handleInput.bind(this), handleSearch: this.handleSearch.bind(this), onKeyDown: this.keyPress.bind(this)
      }),
      React.createElement(MovieList, {
        movieList: this.state.movieList
      })
    );
  }
};

export default App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0FwcC5qc3giXSwibmFtZXMiOlsiTW92aWVMaXN0IiwiU2VhcmNoIiwiQWRkIiwiQXBwIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwic3RhdGUiLCJtb3ZpZUxpc3QiLCJmdWxsTGlzdCIsInNlYXJjaElucHV0IiwiYWRkSW5wdXQiLCJoYW5kbGVJbnB1dCIsImUiLCJ0YXJnZXQiLCJpZCIsInNldFN0YXRlIiwidmFsdWUiLCJrZXlQcmVzcyIsImtleUNvZGUiLCJoYW5kbGVBZGQiLCJoYW5kbGVTZWFyY2giLCJtYXRjaGVzIiwiaSIsImxlbmd0aCIsInRvTG93ZXJDYXNlIiwiaW5jbHVkZXMiLCJwdXNoIiwicmVuZGVyIiwiYmluZCJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsU0FBUCxNQUFzQixnQkFBdEI7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLGFBQW5CO0FBQ0EsT0FBT0MsR0FBUCxNQUFnQixVQUFoQjs7QUFFQSxNQUFNQyxHQUFOLFNBQWtCQyxNQUFNQyxTQUF4QixDQUFrQztBQUNoQ0MsY0FBWUMsS0FBWixFQUFtQjtBQUNqQixVQUFNQSxLQUFOOztBQUVBLFNBQUtDLEtBQUwsR0FBYTtBQUNYQyxpQkFBVyxFQURBO0FBRVhDLGdCQUFVLEVBRkM7QUFHWEMsbUJBQWEsRUFIRjtBQUlYQyxnQkFBVTtBQUpDLEtBQWI7QUFNRDs7QUFFREMsY0FBWUMsQ0FBWixFQUFlO0FBQ2IsUUFBR0EsRUFBRUMsTUFBRixDQUFTQyxFQUFULEtBQWdCLEtBQW5CLEVBQTBCO0FBQ3hCLFdBQUtDLFFBQUwsQ0FBYztBQUNaTCxrQkFBVUUsRUFBRUMsTUFBRixDQUFTRztBQURQLE9BQWQ7QUFHRCxLQUpELE1BSU8sSUFBSUosRUFBRUMsTUFBRixDQUFTQyxFQUFULEtBQWdCLFFBQXBCLEVBQThCO0FBQ25DLFdBQUtDLFFBQUwsQ0FBYztBQUNaTixxQkFBYUcsRUFBRUMsTUFBRixDQUFTRztB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Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1vdmllTGlzdCBmcm9tICcuL01vdmllTGlzdC5qcyc7XG5pbXBvcnQgU2VhcmNoIGZyb20gJy4vU2VhcmNoLmpzJztcbmltcG9ydCBBZGQgZnJvbSAnLi9BZGQuanMnO1xuXG5jbGFzcyBBcHAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBtb3ZpZUxpc3Q6IFtdLFxuICAgICAgZnVsbExpc3Q6IFtdLFxuICAgICAgc2VhcmNoSW5wdXQ6ICcnLFxuICAgICAgYWRkSW5wdXQ6ICcnXG4gICAgfVxuICB9XG4gIFxuICBoYW5kbGVJbnB1dChlKSB7XG4gICAgaWYoZS50YXJnZXQuaWQgPT09ICdhZGQnKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgYWRkSW5wdXQ6IGUudGFyZ2V0LnZhbHVlXG4gICAgICB9KVxuICAgIH0gZWxzZSBpZiAoZS50YXJnZXQuaWQgPT09ICdzZWFyY2gnKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgc2VhcmNoSW5wdXQ6IGUudGFyZ2V0LnZhbHVlXG4gICAgICB9KVxuICAgIH1cbiAgfTtcbiAgXG4gIGtleVByZXNzKGUpIHtcbiAgICBpZihlLmtleUNvZGUgPT09IDEzKSB7XG4gICAgICBpZihlLnRhcmdldC5pZCA9PT0gJ2FkZCcpIHtcbiAgICAgICAgdGhpcy5oYW5kbGVBZGQodGhpcy5zdGF0ZS5hZGRJbnB1dClcbiAgICAgIH0gZWxzZSBpZiAoZS50YXJnZXQuaWQgPT09ICdzZWFyY2gnKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlU2VhcmNoKHRoaXMuc3RhdGUuc2VhcmNoSW5wdXQpXG4gICAgICB9XG4gICAgfTtcbiAgfTtcblxuICBoYW5kbGVTZWFyY2goKSB7XG4gICAgaWYgKHRoaXMuc3RhdGUuc2VhcmNoSW5wdXQgPT09ICcnKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbW92aWVMaXN0OiB0aGlzLnN0YXRlLmZ1bGxMaXN0XG4gICAgICB9KSBcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgbWF0Y2hlcyA9IFtdXG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHRoaXMuc3RhdGUuZnVsbExpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICh0aGlzLnN0YXRlLmZ1bGxMaXN0W2ldLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXModGhpcy5zdGF0ZS5zZWFyY2hJbnB1dC50b0xvd2VyQ2FzZSgpKSkge1xuICAgICAgICBtYXRjaGVzLnB1c2godGhpcy5zdGF0ZS5mdWxsTGlzdFtpXSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAobWF0Y2hlcy5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbW92aWVMaXN0OiBtYXRjaGVzLFxuICAgICAgICBzZWFyY2hJbnB1dDogJydcbiAgICAgIH0pXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBtb3ZpZUxpc3Q6IFsnbW92aWUgbm90IGF2YWlsYWJsZSddLFxuICAgICAgICAgIHNlYXJjaElucHV0OiAnJ1xuICAgICAgICB9KVxuICAgICAgfVxuICAgIH07XG5cbiAgaGFuZGxlQWRkKCkge1xuICAgIGlmICh0aGlzLnN0YXRlLmFkZElucHV0ID09PSAnJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGZ1bGxMaXN0OiBbLi4udGhpcy5zdGF0ZS5mdWxsTGlzdCwgdGhpcy5zdGF0ZS5hZGRJbnB1dF0sXG4gICAgICBtb3ZpZUxpc3Q6IFsuLi50aGlzLnN0YXRlLmZ1bGxMaXN0LCB0aGlzLnN0YXRlLmFkZElucHV0XSxcbiAgICAgIGFkZElucHV0OiAnJ1xuICAgIH0pXG4gIH07XG4gIFxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIDxBZGQgdmFsdWU9e3RoaXMuc3RhdGUuYWRkSW5wdXR9IGhhbmRsZUlucHV0PXt0aGlzLmhhbmRsZUlucHV0LmJpbmQodGhpcyl9IGhhbmRsZUFkZD17dGhpcy5oYW5kbGVBZGQuYmluZCh0aGlzKX0gb25LZXlEb3duPXt0aGlzLmtleVByZXNzLmJpbmQodGhpcyl9Lz5cbiAgICAgICAgPFNlYXJjaFxuICAgICAgICAgIHZhbHVlPXt0aGlzLnN0YXRlLnNlYXJjaElucHV0fSBoYW5kbGVJbnB1dD17dGhpcy5oYW5kbGVJbnB1dC5iaW5kKHRoaXMpfSBoYW5kbGVTZWFyY2g9e3RoaXMuaGFuZGxlU2VhcmNoLmJpbmQodGhpcyl9IG9uS2V5RG93bj17dGhpcy5rZXlQcmVzcy5iaW5kKHRoaXMpfVxuICAgICAgICAvPlxuICAgICAgICA8TW92aWVMaXN0XG4gICAgICAgICAgbW92aWVMaXN0PXt0aGlzLnN0YXRlLm1vdmllTGlzdH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDtcbiJdfQ==